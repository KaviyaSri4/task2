<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Product Catalog Viewer</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    h1 { color: #333; }
    .product { 
      border: 1px solid #ccc; 
      padding: 15px; 
      margin: 10px 0; 
      border-radius: 8px; 
      background: #f9f9f9;
    }
    .product h2 { margin: 0; color: #0077cc; }
    .error { color: red; font-weight: bold; }
  </style>
</head>
<body>
  <h1>Product Catalog</h1>
  <div id="catalog">Loading products...</div>

  <script>
    async function loadProducts() {
      const catalog = document.getElementById("catalog");

      try {
        // Simulating fetch from external file
        // In real project: const response = await fetch("products.json");
        // For demo, we create a fake response
        const fakeResponse = new Response(JSON.stringify([
          { "name": "Laptop", "price": 75000, "description": "High-performance laptop with 16GB RAM and 512GB SSD." },
          { "name": "Smartphone", "price": 25000, "description": "Latest smartphone with 5G support and excellent camera." },
          { "name": "Headphones", "price": 3500, "description": "Noise-cancelling headphones with long battery life." }
        ]), { status: 200 });

        if (!fakeResponse.ok) {
          throw new Error("HTTP error! Status: " + fakeResponse.status);
        }

        const products = await fakeResponse.json();

        // Clear existing content
        catalog.innerHTML = "";

        // Display each product
        products.forEach(product => {
          const div = document.createElement("div");
          div.classList.add("product");
          div.innerHTML = `
            <h2>${product.name}</h2>
            <p><strong>Price:</strong> ₹${product.price}</p>
            <p>${product.description}</p>
          `;
          catalog.appendChild(div);
        });

      } catch (error) {
        catalog.innerHTML = `<p class="error">❌ Failed to load products: ${error.message}</p>`;
        console.error("Error loading products:", error);
      }
    }

    // Load products when page opens
    loadProducts();
  </script>
</body>
</html>
